generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// ======================
// USUARIO
// ======================
model Usuario {
  id_usuario Int      @id @default(autoincrement())
  correo     String   @unique
  password   String
  rol        String   // admin, docente, estudiante

  docentes    Docente[]
  estudiantes Estudiante[]

  chats_enviados  Chat[] @relation("ChatRemitente")
  chats_recibidos Chat[] @relation("ChatDestinatario")
  mensajes_enviados Mensaje[] @relation("MensajeRemitente")

  @@map("usuarios")
}

// ======================
// ESTUDIANTE
// ======================
model Estudiante {
  id_estudiante      Int      @id @default(autoincrement())
  codigo             String   @unique
  dni                String   @unique
  nombre             String
  apellido           String
  id_usuario         Int
  id_seccion         Int?

  usuario   Usuario  @relation(fields: [id_usuario], references: [id_usuario], onDelete: Cascade)
  seccion   Seccion? @relation(fields: [id_seccion], references: [id_seccion], onDelete: SetNull)
  entregas  Entrega[]

  @@map("estudiantes")
}

// ======================
// DOCENTE
// ======================
model Docente {
  id_docente          Int      @id @default(autoincrement())
  codigo              String   @unique
  dni                 String   @unique
  nombre              String
  apellido            String
  id_usuario          Int
  numero_colegiatura String?  
  usuario             Usuario  @relation(fields: [id_usuario], references: [id_usuario], onDelete: Cascade)
  actividades         Actividad[]
  notificaciones      Notificacion[]
  retroalimentaciones Retroalimentacion[]

  secciones           Seccion[] @relation("DocenteSecciones")

  @@map("docentes")
}

// ======================
// BIMESTRE
// ======================
model Bimestre {
  id_bimestre  Int       @id @default(autoincrement())
  nombre       String    // I, II, III, IV
  fecha_inicio DateTime
  fecha_fin    DateTime
  secciones    Seccion[]

  @@map("bimestres")
}

// ======================
// CURSO
// ======================
model Curso {
  id_curso   Int       @id @default(autoincrement())
  nombre     String

  seccionesCurso SeccionCurso[]
  chats          Chat[]
  actividades    Actividad[]

  @@map("cursos")
}

// ======================
// SECCION
// ======================
model Seccion {
  id_seccion  Int       @id @default(autoincrement())
  nombre      String
  id_bimestre Int?

  bimestre    Bimestre? @relation(fields: [id_bimestre], references: [id_bimestre], onDelete: SetNull)

  estudiantes Estudiante[]
  grupos      Grupo[]
  actividades Actividad[]
  docentes    Docente[] @relation("DocenteSecciones")
  seccionesCurso SeccionCurso[]
  chats       Chat[]

  @@map("secciones")
}

// ======================
// SECCION-CURSO
// ======================
model SeccionCurso {
  id_seccion Int
  id_curso   Int

  seccion Seccion @relation(fields: [id_seccion], references: [id_seccion], onDelete: Cascade)
  curso   Curso   @relation(fields: [id_curso], references: [id_curso], onDelete: Cascade)

  @@id([id_seccion, id_curso])
  @@map("secciones_cursos")
}

// ======================
// GRUPO
// ======================
model Grupo {
  id_grupo   Int     @id @default(autoincrement())
  nombre     String
  id_seccion Int

  seccion    Seccion @relation(fields: [id_seccion], references: [id_seccion], onDelete: Cascade)
  foro       Foro?   @relation("GrupoForo")

  @@map("grupos")
}

// ======================
// FORO
// ======================
model Foro {
  id_foro     Int     @id @default(autoincrement())
  id_grupo    Int     @unique
  tema        String
  descripcion String?

  grupo       Grupo   @relation("GrupoForo", fields: [id_grupo], references: [id_grupo], onDelete: Cascade)

  @@map("foros")
}

// ======================
// ACTIVIDAD
// ======================
model Actividad {
  id_actividad  Int      @id @default(autoincrement())
  titulo        String
  descripcion   String?
  tipo          String?
  max_intentos   Int?     @default(3)
  fecha_inicio  DateTime?
  fecha_fin     DateTime?
  estado        String?
  fecha_entrega DateTime?
  archivo       String?  // URL pÃºblica de Supabase
  archivo_ruta  String?  // Ruta interna en Supabase

  id_curso      Int     
  id_docente    Int      
  id_seccion    Int?     
  
  curso         Curso    @relation(fields: [id_curso], references: [id_curso])
  docente       Docente  @relation(fields: [id_docente], references: [id_docente])
  seccion       Seccion? @relation(fields: [id_seccion], references: [id_seccion])

  entregas      Entrega[]
  notificaciones Notificacion[]
  retroalimentaciones Retroalimentacion[]

  @@map("actividades")
}

// ======================
// ENTREGA
// ======================
model Entrega {
  id_entrega     Int       @id @default(autoincrement())
  archivo        String?   // URL pÃºblica de Supabase
  archivo_ruta   String?   // Ruta interna en Supabase
  fecha_entrega  DateTime? 
  comentario_estudiante String? //Comentario opcional del estudiante
  intento        Int      @default(1) //NÃºmero de intento (1, 2, 3...)
  estado_entrega String   @default("ENTREGADO") //Estado: ENTREGADO, CALIFICADO, DEVUELTO

  id_actividad   Int
  id_estudiante  Int
  
  actividad      Actividad  @relation(fields: [id_actividad], references: [id_actividad], onDelete: Cascade)
  estudiante     Estudiante @relation(fields: [id_estudiante], references: [id_estudiante], onDelete: Cascade)

  retroalimentacion Retroalimentacion? @relation("EntregaRetro")
  notificacion   Notificacion? @relation("EntregaNotif")

  @@unique([id_estudiante, id_actividad, intento]) //Ãšnico por estudiante, actividad e intento
  @@map("entregas")
}

// ======================
// RETROALIMENTACION
// ======================
model Retroalimentacion {
  id_retroalimentacion Int      @id @default(autoincrement())
  comentario           String   //Comentario del docente
  calificacion         Float?
  fecha                DateTime @default(now())
  id_actividad         Int
  id_docente           Int
  id_entrega           Int?     @unique

  actividad            Actividad @relation(fields: [id_actividad], references: [id_actividad], onDelete: Cascade)
  docente              Docente   @relation(fields: [id_docente], references: [id_docente], onDelete: Cascade)
  entrega              Entrega?  @relation("EntregaRetro", fields: [id_entrega], references: [id_entrega], onDelete: SetNull)

  @@map("retroalimentaciones")
}

// ======================
// NOTIFICACION
// ======================
model Notificacion {
  id_notificacion  Int      @id @default(autoincrement())
  mensaje          String
  fecha_envio      DateTime @default(now())
  tipo             String?
  id_actividad     Int?
  id_docente       Int?
  id_entrega       Int?     @unique

  actividad        Actividad? @relation(fields: [id_actividad], references: [id_actividad], onDelete: SetNull)
  docente          Docente?   @relation(fields: [id_docente], references: [id_docente], onDelete: SetNull)
  entrega          Entrega?   @relation("EntregaNotif", fields: [id_entrega], references: [id_entrega], onDelete: SetNull)

  @@map("notificaciones")
}

// ======================
// CHAT
// ======================
model Chat {
  id_chat        Int      @id @default(autoincrement())
  id_remitente   Int
  id_destinatario Int
  id_seccion     Int?
  id_curso       Int?

  remitente      Usuario  @relation("ChatRemitente", fields: [id_remitente], references: [id_usuario])
  destinatario   Usuario  @relation("ChatDestinatario", fields: [id_destinatario], references: [id_usuario])
  seccion        Seccion? @relation(fields: [id_seccion], references: [id_seccion], onDelete: SetNull)
  curso          Curso?   @relation(fields: [id_curso], references: [id_curso], onDelete: SetNull)
  mensajes       Mensaje[]

  @@map("chats")
}

// ======================
// MENSAJE
// ======================
model Mensaje {
  id_mensaje    Int      @id @default(autoincrement())
  contenido     String?
  archivo       String?  // ðŸ†• URL pÃºblica de Supabase para archivos
  archivo_ruta  String?  // ðŸ†• Ruta interna en Supabase
  fecha         DateTime @default(now())
  id_chat       Int
  id_remitente  Int

  chat          Chat     @relation(fields: [id_chat], references: [id_chat], onDelete: Cascade)
  remitente Usuario @relation("MensajeRemitente", fields: [id_remitente], references: [id_usuario], onDelete: Cascade)

  @@map("mensajes")
}